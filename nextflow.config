#!/usr/bin/env nextflow

/*
#
#
#  ██████╗ ██╗  ██╗██╗   ██╗██╗      ██████╗ ██████╗ ██╗  ██╗███████╗██████╗ ███████╗
#  ██╔══██╗██║  ██║╚██╗ ██╔╝██║     ██╔═══██╗██╔══██╗██║  ██║██╔════╝██╔══██╗██╔════╝
#  ██████╔╝███████║ ╚████╔╝ ██║     ██║   ██║██████╔╝███████║█████╗  ██████╔╝█████╗
#  ██╔═══╝ ██╔══██║  ╚██╔╝  ██║     ██║   ██║██╔═══╝ ██╔══██║██╔══╝  ██╔══██╗██╔══╝
#  ██║     ██║  ██║   ██║   ███████╗╚██████╔╝██║     ██║  ██║███████╗██║  ██║███████╗
#  ╚═╝     ╚═╝  ╚═╝   ╚═╝   ╚══════╝ ╚═════╝ ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝
#
#
# PHYLOPHERE: A Nextflow pipeline including a complete set
# of phylogenetic comparative tools and analyses for Phenome-Genome studies
#
# Github: https://github.com/nozerorma/caastools/nf-phylophere
#
# Author:         Miguel Ramon (miguel.ramon@upf.edu)
#
# File: nextflow.config
#
*/

/*
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Configuration file for setting up global parameters, process-specific resource requirements,
 * and execution profiles. This ensures optimal resource allocation and flexibility across
 * different compute environments.
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */

process.container           = 'miralnso/caastools-micromamba:latest'

// Redirect logs to stable log dir: $ export NXF_LOG_FILE="log/nextflow.log" (must be set in console before running the script)

// Global default params, used in configs
params {

    // CT general option
    ct_tool                     = ct_tool                   ?:  null  //"discovery,resample,bootstrap"

    // Common DISCOVERY and BOOTSTRAP options
    alignment                   = alignment                 ?:  "$baseDir/Data/2.Alignments"
    disc_description            = disc_description          ?:  null
    traitfile                   = traitfile                 ?:  "$baseDir/Data/6.CAAS_traitfiles/config-t3.tab"
    ali_format                  = ali_format                ?:  "phylip-relaxed"
    // clustal, emboss, fasta, fasta-m10, ig, maf, mauve, msf, nexus, phylip, phylip-sequential, phylip-relaxed, stockholm
    patterns                    = patterns                  ?:  "1,2,3,4"
    maxbggaps                   = maxbggaps                 ?:  "NO"
    maxfggaps                   = maxfggaps                 ?:  "NO"
    maxgaps                     = maxgaps                   ?:  "NO"
    maxgapsperposition          = maxgapsperposition        ?:  "0.5"
    maxbgmiss                   = maxbgmiss                 ?:  "NO"
    maxfgmiss                   = maxfgmiss                 ?:  "NO"
    maxmiss                     = maxmiss                   ?:  "NO"

    // RESAMPLE options
    tree                       = tree                       ?:  "${baseDir}/Data/5.Phylogeny/science.abn7829_data_s4.nex.tree"
    strategy                   = strategy                   ?:  "FGBG"
    fgsize                     = fgsize                     ?:  "6"
    bgsize                     = bgsize                     ?:  "6"
    template                   = template                   ?:  null
    bygroup                    = bygroup                    ?:  null
    traitvalues                = traitvalues                ?:  null
    cycles                     = cycles                     ?:  "500"

    // BOOTSTRAP options
    resample_out               = resample_out               ?:  null

    // RERCONVERGE options
    // General options
    rer_tool                   = rer_tool                   ?:  "build_trait,continuous" //"build_trait, binary, continuous"
    gene_trees                 = gene_trees                 ?:  "$baseDir/Data/3.Gene_trees/ALL_FEB23_geneTrees.txt"
    my_traits                  = my_traits                  ?:  "$baseDir/Data/1.Cancer_data/clean_primate_traits.csv"
    traitname                  = traitname                  ?:  "neoplasia_prevalence" // How your traitcolumn is named in your dataset
    trait_out                  = trait_out                  ?:  "$baseDir/Data/7.RER_objects/RER_Traits/neoplasia_prevalence.polished.output"
    trees_out                  = trees_out                  ?:  "$baseDir/Data/7.RER_objects/RER_Results/neoplasia_prevalence.continuous.output"
    matrix_out                 = matrix_out                 ?:  "$baseDir/Data/7.RER_objects/RER_Objects/neoplasia_prevalence.RERmatrix.output"

    // Continuous analysis options
    rer_minsp                  = rer_minsp                  ?: "10"
    winsorizeRER               = winsorizeRER               ?: "3"
    winsorizeTrait             = winsorizeTrait             ?: "3"

    // Traitfile must have two columns including the names of the species to analyze and the trait values


    // ORA (not working aon)
    // ora                        = ora                     ?: "GO-CC,GO-BP,GO-MF,KEGG,DO,DGN,REACTOME,WP,NCG"
    // ora_plots                  = false
    // You can choose between GO-CC, GO-BP, GO-MF, KEGG, DO, DGN, REACTOME, WP, NCG

    // Boilerplate options
    outdir                     = outdir                     ?: "$baseDir/Out/Phylophere"
    monochrome_logs            = false
    hok_url                    = null
    help                       = false
    version                    = false
}

cleanup = false

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'


profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }
    conda {
        conda.enabled          = true
        conda.cacheDir         = "$baseDir/conda"
        docker.enabled         = false
        podman.enabled         = false
        singularity.enabled    = false
    }
    mamba {
        conda.enabled          = true
        conda.useMicromamba    = true
        conda.cacheDir         = "$baseDir/mamba"
        docker.enabled         = false
        podman.enabled         = false
        singularity.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        conda.enabled          = false
        podman.enabled         = false
        singularity.enabled    = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = true
        singularity.enabled    = false
    }
    singularity {
        singularity.enabled         = true
        singularity.autoMounts      = true
        singularity.cacheDir        = "$projectDir/singularity"
        docker.enabled              = false
        podman.enabled              = false
    }
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

// Timestamp
def trace_timestamp = new Date().format('yyyyMMdd_HH')

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    trace.overwrite = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}
tower {
  accessToken                   = accessToken                   ?:  NULL
  enabled = true
}

manifest {
    name            = 'nf-caastools'
    author          = """Miguel Ramon Alonso"""
    homePage        = 'https://github.com/nozerorma/caastools'
    description     = """Nexflow pipeline for running CAAStools analyses"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.04.0'
    version         = '1.0'
    doi             = ''
}

//Profile config names for nf-core/configs
// params {
//     config_profile_description = 'Config file for Marvin Cluster (UPF-CSIC), based on nf-core/configs'
//     config_profile_contact = 'pc.quilis@gmail.com (Pablo Carrion)'
//     config_profile_url = 'https://www.ibe.upf-csic.es'
//     max_memory = 256.GB
//     max_cpus = 32
//     max_time = 960.h
// }

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

profiles {
    standard {
        process {
            executor="local"
            // time = "${params.max_time}"
        }
    }

    cluster {
        process {
            executor = "slurm"
            // time = "${params.max_time}"
        }
    }
}
